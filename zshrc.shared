# ---------------------------------------------------------------------- Options
# Never ask me "Did you mean...?" again. >:|
unsetopt correct
unsetopt correctall
DISABLE_CORRECTION="true"


# Stop verifying I meant $! when I meant $!
# I can still hit tab to expand it, the confirmation seems silly
setopt no_histverify


# -------------------------------------------------------------------- Variables
export EDITOR='nvim'
export BUNDLER_EDITOR='nvim'
export GIT_EDITOR='nvim'
export REF="$HOME/ref"


# ------------------------------------------------------------- External Scripts
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

## Z: https://github.com/rupa/z
. /usr/local/etc/profile.d/z.sh


# ---------------------------------------------------------------------- Aliases
alias s='exa'
alias l='exa'
alias cat="bat"

alias vim='nvim'
alias v=vim
alias vi=vim

alias be='bundle exec'
alias bake='bundle exec rake'

alias hi='ag --passthru --color-match "30;46"'

alias refcat=catref

# git aliases
alias gca='git commit --amend --no-edit'
alias d='git diff'
alias gdc='git diff --cached'
alias st='git status --short'
alias sc='git status'
alias gst='git stash'
alias gpm='git stash; git co master; git pull -r'
alias gpr='git pull -r'
alias gsh='git show'
alias dbr='git branch -D '
alias gl="git log --pretty=format:'%C(cyan)%h%Creset %s %C(white)<%an>%Creset' --abbrev-commit -10 --no-merges"
alias lg="git log -2"
alias mrb="git for-each-ref --count 1 --sort=-committerdate refs/heads/ --format='%(HEAD) %(committerdate:relative)%(color:reset): %(refname:short)%(color:reset) %(color:reset)'"

# `gh` opens the current project in the browser (without `hub`)
alias gh="open \`git remote -v | grep git@github.com | grep fetch | head -1 | cut -f2 | cut -d' ' -f1 | sed -e's/:/\//' -e 's/git@/http:\/\//'\`"

# `timer 5m`
alias timer="noti termdown"

# -------------------------------------------------------------------- Functions
function wip() {
  branch_name="$(git symbolic-ref HEAD 2>/dev/null)"
  case "$branch_name" in
    'refs/heads/master')
      echo "This is master; maybe check out a new branch with a nice name?"
      ;;
    '')
      echo "This doesn't appear to be a git directory."
      ;;
    *)
      git commit -m "WIP"
      ;;
  esac
}

function daylog() {
  # date +"%Y %m/%Y-%m-%d.txt"

  ref_dir=$HOME/ref
  month_folder=$(date -v -Mon +"%Y %m")
  full_month_path=$ref_dir/"$month_folder"
  echo $full_month_path
  mkdir -p $ref_dir/"$month_folder"
  journal_filename=$(date -v -Mon +"%Y-%m-%d.md")

  pushd $ref_dir/"$month_folder"
    if [ -s $journal_filename ]; then
      echo "file is not empty, not creating headings"
    else
      touch $journal_filename
      echo "# Monday\n" >> $journal_filename
      echo "# Tuesday\n" >> $journal_filename
      echo "# Wednesday\n" >> $journal_filename
      echo "# Thursday\n" >> $journal_filename
      echo "# Friday\n" >> $journal_filename
      echo "# next week\n" >> $journal_filename
    fi

    nvim $journal_filename -c "cd /Users/derekreeve/ref"
  popd
}

function refs() {
  rg $1 $REF
}

function findrefs() {
  find ref -name "*${1}*"
}

function refsearch() {
  find $REF -name "*${1}*" -execdir printf "{}:\t" \; -execdir head -n1 {} \;
}

function catref() {
  found_filepath=$(find $HOME/ref -name "*${1}*" | head -n1)
  bat $found_filepath
}

alias refcat=catref

function ref() {
  mkdir -p "$REF/00 To Review"
  local subdirectory="$REF/00 To Review"
  local filename=$(date +"%Y-%m-%d %H")
  local extension="md"

  if [ "$#" -gt 0 ]; then
    case "$1" in
      t)
        subdirectory=$REF
        extension="txt"
        filename="${@:2}"
        ;;
      *)
        subdirectory=$REF
        filename="$*"
    esac
  fi

  $EDITOR "$subdirectory/$filename.$extension"
}

function unfinished() {
  this_weeks_journal=$(date -v -Mon +"%Y-%m-%d.md")
  this_weeks_journal_path="$REF/$(date +"%Y %m")/$this_weeks_journal"
  last_weeks_journal=$(gdate --date "last-monday - 1 week" +"%Y-%m-%d.md")
  last_weeks_journal_path="$REF/$(gdate --date "last-monday - 1 week" +"%Y %m")/$last_weeks_journal"

  if [ -f "$last_weeks_journal_path" ]; then
  else
    last_weeks_journal=$(gdate --date "last-monday - 2 weeks" +"%Y-%m-%d.md")
    last_weeks_journal_path="$REF/$(gdate --date "last-monday - 2 weeks" +"%Y %m")/$last_weeks_journal"
  fi

  rg \\\[\\\s\\\] $this_weeks_journal_path $last_weeks_journal_path
}

function mark_as_skipped() {
  sed -i .bak 's/\[ /\[./g' $1
}

function last_week() {
  ref_dir=$HOME/ref
  month_folder=$(date +"%Y %m")
  this_weeks_journal=$(date -v -Mon +"%Y-%m-%d.md")
  last_weeks_journal=$(gdate --date "last-monday - 1 week" +"%Y-%m-%d.md")

  full_month_path=$ref_dir/"$month_folder"

  if [ -f "$full_month_path/$last_weeks_journal" ]; then
    echo "Exists"
  else
    last_weeks_journal=$(gdate --date "last-monday - 2 weeks" +"%Y-%m-%d.md")
  fi

  echo "$full_month_path/$last_weeks_journal"
}
